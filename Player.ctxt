#BlueJ class context
comment0.params=n\ c
comment0.target=Player(java.lang.String,\ java.awt.Color)
comment0.text=\n\ Constructor\ for\ a\ player.\ It\ includes\ a\ string\n\ for\ the\ player's\ name\ and\ a\ color\ to\ tell\ apart\ the\ \n\ player's\ captured\ routes\n\ \n\ @param\ n\ -\ the\ String\ for\ the\ player's\ name\n\ @param\ c\ -\ the\ color\ of\ the\ player's\ captured\ routes\n\ \n
comment1.params=
comment1.target=java.awt.Color\ getColor()
comment1.text=\n\ Retrieves\ the\ player's\ color\n\ \n\ @return\ the\ player's\ color\n
comment10.params=
comment10.target=boolean\ isTurn()
comment10.text=\n\ This\ checks\ to\ see\ if\ its\ a\ player's\ turn\ or\ not\n\ \n\ @return\ -\ true\ if\ its\ the\ current\ player's\ turn\ and\\\n\ false\ otherwise\n
comment11.params=color
comment11.target=int\ cardCount(java.lang.String)
comment11.text=\n\ This\ method\ retrieves\ the\ number\ of\ cards\ in\ a\ player's\n\ hand\ deending\ on\ what\ the\ input\ given\ is\n\ \n\ @param\ color\ -\ the\ specfic\ color\ of\ the\ card\ to\ be\ \n\ \ \ \ \ \ searched\ for\n\ \ \n\ \ @return\ -\ the\ number\ of\ cards\ in\ the\ hand\ that\ match\ \n\ \ \ \ \ \ the\ given\ input\n
comment12.params=played
comment12.target=java.util.ArrayList\ capture(java.util.ArrayList)
comment12.text=\ \n\ \n
comment13.params=t
comment13.target=void\ addCard(TrainCard)
comment13.text=\n\ Adds\ a\ train\ card\ to\ the\ player's\ hand.\n\ \n\ @param\ t\ The\ TrainCard\ to\ add.\n
comment14.params=d
comment14.target=void\ addDest(DestinationCard)
comment14.text=\n\ Adds\ a\ destination\ card\ to\ the\ player's\ deck\n\ \n\ @param\ d\ -\ the\ card\ to\ be\ added\n
comment15.params=
comment15.target=java.util.ArrayList\ getDest()
comment15.text=\n\ Retrieves\ the\ destination\ cards\ for\ a\ specific\ player\n\ \n\ @return\ the\ player's\ destination\ cards\n
comment16.params=s\ d
comment16.target=void\ addDirectedEdge(int,\ int)
comment16.text=\n\ Adds\ a\ directed\ edge\ between\ two\ cities\n\ \n\ @param\ s\ -\ the\ location\ of\ the\ start\ city\n\ in\ the\ captured\ array\n\ \n\ @param\ d\ -\ the\ location\ of\ the\ second\ city\ \n\ in\ the\ captured\ array\n
comment17.params=v1\ v2
comment17.target=void\ addEdge(int,\ int)
comment17.text=\n\ \ Adds\ an\ undirected\ edge\ between\ vertex\ v1\ and\ v2\n\ \ @param\ v1\ one\ vertex\ of\ the\ edge\n\ \ @param\ v2\ the\ other\ vertex\ of\ the\ edge\n
comment18.params=
comment18.target=int\ longestRoute()
comment18.text=\n\ Goes\ through\ a\ player's\ captured\ routes\ and\ \n\ returns\ the\ value\ of\ the\ longest\ connected\ route.\n\ \n\ @return\ the\ longest\ connected\ route\ Integer\ value\n
comment19.params=v
comment19.target=void\ dfs(int)
comment19.text=\n\ This\ method\ recursively\ searches\ a\ graph\ and\ \n\ checks\ to\ see\ if\ all\ nodes\ (cities)\ are\ \n\ connected.\n\ \n\ @param\ v\ -\ the\ integer\ value\ of\ the\ city\n
comment2.params=
comment2.target=java.lang.String\ getName()
comment2.text=\n\ Retrieves\ the\ player's\ name\n\ \n\ @return\ the\ player's\ name\n
comment20.params=
comment20.target=java.util.ArrayList\ checkDestinationCards()
comment20.text=\n\ Checks\ to\ see\ if\ the\ player's\ destination\ cards\ have\ been\ completed\n\ \n\ @return\ the\ point\ values\ of\ each\ destination\ card\ completed\n
comment21.params=
comment21.target=int\ destsCompleted()
comment21.text=\n\ Returns\ the\ count\ of\ the\ number\ of\ destination\n\ cards\ completed\ by\ a\ player\n\ \n\ @return\ the\ number\ of\ destination\ cards\n\ completed\n
comment3.params=i
comment3.target=void\ updateScore(int)
comment3.text=\n\ This\ method\ updates\ the\ player's\ score\ depending\ on\ \n\ the\ input\n\ \n\ @param\ i\ -\ the\ value\ to\ be\ added\ to\ the\ score\n
comment4.params=
comment4.target=int\ getScore()
comment4.text=\n\ Retrieves\ the\ player's\ score\n\ \n\ @return\ the\ player's\ score\n
comment5.params=i
comment5.target=void\ updateTrains(int)
comment5.text=\n\ This\ method\ updates\ the\ player's\ trains\ depending\ on\ \n\ the\ input\n\ \n\ @param\ i\ -\ the\ value\ to\ be\ subtracted\ from\n\ \ the\ player's\ train\ count\n
comment6.params=
comment6.target=int\ getTrains()
comment6.text=\n\ Retrieves\ the\ player's\ trains\n\ \n\ @return\ the\ player's\ trains\n
comment7.params=
comment7.target=int\ getMtns()
comment7.text=\n\ Retrieves\ the\ player's\ mountains\n\ \n\ @return\ the\ player's\ mountains\n
comment8.params=i
comment8.target=void\ updateMtns(int)
comment8.text=\n\ This\ method\ updates\ the\ player's\ mountains\ \n\ depending\ on\ ]the\ input\n\ \n\ @param\ i\ -\ the\ value\ to\ be\ subtracted\ from\n\ \ the\ player's\ mountains\n
comment9.params=
comment9.target=void\ changeTurn()
comment9.text=\n\ This\ method\ changes\ the\ state\ of\ the\ \n\ player's\ turn.\n
numComments=22
